{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","toLocaleTimeString","timerId","setInterval","this","setState","d","getTime","props","hour","hrs","getUTCHours","toLocaleString","minimumIntegerDigits","mins","getUTCMinutes","secs","getUTCSeconds","newDate","console","log","clearInterval","React","Component","App","isClockVisible","clockName","name","className","type","onClick","namesArr","city","timeZone","randomIndex","Math","floor","random","length","ReactDOM","render","document","getElementById"],"mappings":"sNAYaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,qBACjBC,QAASC,aAAY,cAAU,IAHnC,uDAME,WAAqB,IAAD,OAClBC,KAAKC,SAAS,CACZH,QAASC,aAAY,WACnB,IAAMG,EAAI,IAAIN,MAAK,IAAIA,MAAOO,UAA+B,KAAlB,EAAKC,MAAMC,KAAc,KAC9DC,EAAMJ,EAAEK,cAAcC,eAAe,QAAS,CAAEC,qBAAsB,IACtEC,EAAOR,EAAES,gBAAgBH,eAAe,QAAS,CAAEC,qBAAsB,IACzEG,EAAOV,EAAEW,gBAAgBL,eAAe,QAAS,CAAEC,qBAAsB,IACzEK,EAAO,UAAMR,EAAN,YAAaI,EAAb,YAAqBE,GAElC,EAAKX,SAAS,CAAEN,KAAMmB,IAEtBC,QAAQC,IAAI,EAAKtB,MAAMC,QACtB,SAlBT,kCAsBE,WACEsB,cAAcjB,KAAKN,MAAMI,WAvB7B,oBA0BE,WACE,OACE,mCACE,8CAEG,IACAE,KAAKN,MAAMC,cAhCtB,GAA2BuB,IAAMC,WCA3BC,E,4MACJ1B,MAAQ,CACN2B,gBAAgB,EAChBC,UAAW,OACXjB,KAAM,G,wDAGR,WAEEU,QAAQC,IAAR,gDAAqDhB,KAAKN,MAAM4B,c,oBAGlE,WAAU,IAAD,OAoBP,OACE,qCACE,6CAEA,uDAEG,IACAtB,KAAKN,MAAM4B,aAGbtB,KAAKN,MAAM2B,eACR,cAAC,EAAD,CAAOE,KAAMvB,KAAKN,MAAM4B,UAAWjB,KAAML,KAAKN,MAAMW,OACpD,KAEJ,sBAAKmB,UAAU,MAAf,UACE,wBACEC,KAAK,SACLC,QApCU,WAChB,EAAKzB,SAAS,CAAEoB,gBAAgB,KAiC5B,wBAOA,wBACEI,KAAK,SACLC,QAvCU,WAChB,EAAKzB,SAAS,CAAEoB,gBAAgB,KAoC5B,wBAOA,wBACEI,KAAK,SACLC,QA1Cc,WACpB,IAAMC,EAAW,CAAC,CAAEC,KAAM,OAAQC,SAAU,GAAK,CAAED,KAAM,SAAUC,SAAU,GAAK,CAAED,KAAM,QAASC,SAAU,GAAK,CAAED,KAAM,UAAWC,SAAU,GAAK,CAAED,KAAM,cAAeC,UAAW,GAAK,CAAED,KAAM,SAAUC,SAAU,GAAK,CAAED,KAAM,aAAcC,UAAW,GAAK,CAAED,KAAM,SAAUC,SAAU,GAAK,CAAED,KAAM,YAAaC,SAAU,IAAM,CAAED,KAAM,WAAYC,UAAW,GAAK,CAAED,KAAM,UAAWC,SAAU,GAAK,CAAED,KAAM,QAASC,SAAU,GAAK,CAAED,KAAM,WAAYC,UAAW,GAAK,CAAED,KAAM,cAAeC,SAAU,IAE7eC,EAAcC,KAAKC,MAAMD,KAAKE,UAAaN,EAASO,OAAS,EAAK,IAExE,EAAKjC,SAAS,CACZqB,UAAWK,EAASG,GAAaF,KACjCvB,KAAMsB,EAASG,GAAaD,YAiC1B,uC,GA7DQX,IAAMC,WAyETC,IClFfe,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a82ce01a.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: string;\n  hour: number;\n};\n\ntype State = {\n  date: string;\n  timerId: NodeJS.Timer;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    date: new Date().toLocaleTimeString(),\n    timerId: setInterval(() => {}, 0),\n  };\n\n  componentDidMount() {\n    this.setState({\n      timerId: setInterval(() => {\n        const d = new Date(new Date().getTime() + (this.props.hour * 3600 * 1000));\n        const hrs = d.getUTCHours().toLocaleString('en-EN', { minimumIntegerDigits: 2 });\n        const mins = d.getUTCMinutes().toLocaleString('en-EN', { minimumIntegerDigits: 2 });\n        const secs = d.getUTCSeconds().toLocaleString('en-EN', { minimumIntegerDigits: 2 });\n        const newDate = `${hrs}:${mins}:${secs}`;\n\n        this.setState({ date: newDate });\n        // eslint-disable-next-line\n        console.log(this.state.date);\n      }, 1000),\n    });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.timerId);\n  }\n\n  render() {\n    return (\n      <>\n        <p>\n          Current time:\n          {' '}\n          {this.state.date}\n        </p>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\ntype Props = {};\n\ntype State = {\n  isClockVisible: boolean;\n  clockName: string;\n  hour: number,\n};\n\nclass App extends React.Component<Props, State> {\n  state = {\n    isClockVisible: true,\n    clockName: 'Kyiv',\n    hour: 2,\n  };\n\n  componentDidUpdate() {\n    // eslint-disable-next-line\n    console.log(`The Clock was renamed from oldName to ${this.state.clockName}`);\n  }\n\n  render() {\n    const showClock = () => {\n      this.setState({ isClockVisible: true });\n    };\n\n    const hideClock = () => {\n      this.setState({ isClockVisible: false });\n    };\n\n    const setRandomName = () => {\n      const namesArr = [{ city: 'Kyiv', timeZone: 2 }, { city: 'London', timeZone: 1 }, { city: 'Paris', timeZone: 1 }, { city: 'Toronto', timeZone: 4 }, { city: 'Los Angeles', timeZone: -7 }, { city: 'Vienna', timeZone: 1 }, { city: 'Washington', timeZone: -4 }, { city: 'Madrid', timeZone: 1 }, { city: 'Melbourne', timeZone: 11 }, { city: 'Santiago', timeZone: -3 }, { city: 'Beijing', timeZone: 8 }, { city: 'Tokyo', timeZone: 9 }, { city: 'Brasilia', timeZone: -3 }, { city: 'Mexico City', timeZone: 6 }];\n\n      const randomIndex = Math.floor(Math.random() * ((namesArr.length - 1) - 0));\n\n      this.setState({\n        clockName: namesArr[randomIndex].city,\n        hour: namesArr[randomIndex].timeZone,\n      });\n    };\n\n    return (\n      <>\n        <h1>React clock</h1>\n\n        <h2>\n          Current Local Time in\n          {' '}\n          {this.state.clockName}\n        </h2>\n\n        {this.state.isClockVisible\n          ? <Clock name={this.state.clockName} hour={this.state.hour} />\n          : null}\n\n        <div className=\"App\">\n          <button\n            type=\"button\"\n            onClick={showClock}\n          >\n            Show Clock\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={hideClock}\n          >\n            Hide Clock\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={setRandomName}\n          >\n            Set random name\n          </button>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}